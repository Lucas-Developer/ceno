---
# - name: test
#   ping:

# sometimes it is not for some reason
# - name: run npm
#   become_user: "{{ proxyuser }}"
#   become: yes
#   shell: "npm install"
#   args:
#     chdir: "/home/{{ proxyuser }}/CENORSSInserter/bundle-server/"

# - name: Stop CeNo if it is running
#   become: yes
#   become_user: "{{ proxyuser }}"
#   command: "/home/{{ proxyuser }}/CENORSSInserter/run.sh stop"
#   args:
#     chdir: "/home/{{ proxyuser }}/CENORSSInserter/"
#   ignore_errors: True

# - name: Copy fixed bshandler
#   become_user: "{{ proxyuser }}"
#   become: yes
#   copy:
#   args:
#     src: "bshandler.js"
#     dest: "/home/{{ proxyuser }}/CENORSSInserter//bundle-server/CENOBridge.jar"

- name: Copy fixed reader
  become_user: "{{ proxyuser }}"
  become: yes
  copy:
  args:
    src: "reader"
    dest: "/home/{{ proxyuser }}/CENORSSInserter/rss-reader/reader"

- name: Copy fixed reader config
  become_user: "{{ proxyuser }}"
  become: yes
  copy:
  args:
    src: "config.json"
    dest: "/home/{{ proxyuser }}/CENORSSInserter/rss-reader/config/config.json"

- name: Copy fixed run-reader.sh
  become_user: "{{ proxyuser }}"
  become: yes
  copy:
  args:
    src: "run-reader.sh"
    dest: "/home/{{ proxyuser }}/CENORSSInserter/run-reader.sh"

- name: make run-reader.sh executable
  become_user: "{{ proxyuser }}"
  become: yes
  file:
  args:
    src: "run-reader.sh"
    path: "/home/{{ proxyuser }}/CENORSSInserter/run-reader.sh"
    mode: "u+x,g+x,o+x"

# - name: kill the bundler server
#   become_user: "{{ proxyuser }}"
#   become: yes
#   command: "pkill node"
#   ignore_errors: True

# # - name: Copy fixed bridge plugin
# #   become_user: "{{ proxyuser }}"
# #   become: yes
# #   copy:
# #   args:
# #     src: "CENOBridge.jar"
# #     dest: "/home/{{ proxyuser }}/CENORSSInserter/CENOBridge.jar"
# - name: add readercron job
#   become_user: "{{ proxyuser }}"
#   become: yes
#   cron:
#   args:
#     name: "keep reader alive"
#     job: "lsof -i :3096 | grep LISTEN || /home/amnesia/CENORSSInserter/run-reader.sh"
  #job: "if ! /usr/bin/pgrep node >/dev/null; then /home/amnesia/CENORSSInserter/run-bundle-server.sh; fi"

- name: kill the reader
  become_user: "{{ proxyuser }}"
  become: yes
  command: "pkill reader"
  ignore_errors: True

# - name: Remove current feed db
#   file:
#   args:
#     path: "/home/{{ proxyuser }}/CENORSSInserter/rss-reader/feeds.db"
#     state: absent

# - name: copy new fixed bash script
#   become_user: "{{ proxyuser }}"
#   become: yes
#   copy:
#   args:
#     src: "CENORSSInserter.sh"
#     dest: "/home/{{ proxyuser }}/CENORSSInserter/CENORSSInserter.sh"

# - name: copy new fixed run script
#   become_user: "{{ proxyuser }}"
#   become: yes
#   copy:
#   args:
#     src: "run.sh"
#     dest: "/home/{{ proxyuser }}/CENORSSInserter/run.sh"

- name: copy new fixed bundler script
  become_user: "{{ proxyuser }}"
  become: yes
  copy:
  args:
    src: "run-bundle-server.sh"
    dest: "/home/{{ proxyuser }}/CENORSSInserter/run-bundle-server.sh"

# - name: Run CENO bridge
#   become_user: "{{ proxyuser }}"
#   become: yes
#   command: "/home/{{ proxyuser }}/CENORSSInserter/CENORSSInserter.sh"
#   args:
#     chdir: "/home/{{ proxyuser }}/CENORSSInserter/"

- name: wait for bridge
  become_user: "{{ proxyuser }}"
  become: yes
  wait_for:
  args:
    port: 3095

- name: wait for bundler
  become_user: "{{ proxyuser }}"
  become: yes
  wait_for:
  args:
    port: 3094
    
# - name: run rss reader
#   become_user: "{{ proxyuser }}"
#   become: yes
#   shell: "( (nohup ./reader >>../CENO_rss.log ) & )" #nohup by default redirect the stderr to stdout and 2>&1 doesn't work in ansible for some reason anyway
#   args:
#     executable: /bin/bash
#     chdir: "/home/{{ proxyuser }}/CENORSSInserter/rss-reader/"

- name: wait for reader
  become_user: "{{ proxyuser }}"
  become: yes
  wait_for:
  args:
    port: 3096

# - name: run the follower
#   become_user: "{{ proxyuser }}"
#   become: yes
#   shell: "( ( nohup ./follower ../feedlist.txt 1 1>>../CENO.log) & )"
#   #async: 1250
#   #poll: 0
#   args:
#     executable: /bin/bash
#     chdir: "/home/{{ proxyuser }}/CENORSSInserter/rss-reader/"
    
# # # - name: Wait for bridge to publish its descriptor
# # #   become_user: "{{ proxyuser }}"
# # #   become: yes
# # #   wait_for: timeout=60
# # #   args:
# # #     path: "/home/{{ proxyuser }}/CENORSSInserter/resources/myref.txt"
# # # notify:
# # #   fetch descriptor
  
# # #  # - name: Read backbone descriptor
# # #  #   sudo: true
# # #  #   sudo_user: "{{ proxyuser }}"
# # #  #   slurp:
# # #  #   args:
# # #  #     src: "/home/{{ proxyuser }}/CENOBox/resources/myref.txt"
# # #  #   register: ceno_backbone_refence

# # #  #  - name: Add descriptor to db
# # #  #    host: local
# # #  #    lineinfile:
# # #  #    args:
# # #  #      dest=bridgeref.txt
# # #  #      line=
        
  
   